{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///var/www/PersonalProjects/web_blog/kunle-personal-site/frontend/src/axios/Axios.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:4000\",\n  timeout: 10000,\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptor\ninstance.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor - Remove automatic redirects to prevent conflicts\ninstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Just return the error, let the AuthContext handle redirects\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"names":[],"mappings":";;;;AAGW;AAHX;;AAEA,MAAM,WAAW,+JAAK,CAAC,MAAM,CAAC;IAC5B,SAAS,8DAAmC;IAC5C,SAAS;IACT,iBAAiB;IACjB,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,sBAAsB;AACtB,SAAS,YAAY,CAAC,OAAO,CAAC,GAAG,CAC/B,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,yEAAyE;AACzE,SAAS,YAAY,CAAC,QAAQ,CAAC,GAAG,CAChC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,8DAA8D;IAC9D,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///var/www/PersonalProjects/web_blog/kunle-personal-site/frontend/src/apis/Auth/api.ts"],"sourcesContent":["import instance from \"@/axios/Axios\";\n\n// Types for login\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  success: boolean;\n  message: string;\n  data: {\n    user: {\n      id: string;\n      email: string;\n    };\n    // No token field since it's in HTTP-only cookie\n  };\n}\n\nexport interface ApiError {\n  success: boolean;\n  message: string;\n  errors?: any[];\n}\n\n/**\n * Admin login\n * @param credentials - Email and password\n * @returns Promise with login response\n */\nexport const loginUser = async (credentials: LoginRequest): Promise<LoginResponse> => {\n  try {\n    // Make sure cookies are included in the request\n    const response = await instance.post<LoginResponse>('/api/auth/login', credentials, {\n      withCredentials: true, // This ensures cookies are sent/received\n    });\n    return response.data;\n  } catch (error: any) {\n    // Handle axios error\n    if (error.response?.data) {\n      throw error.response.data as ApiError;\n    }\n    \n    // Handle network or other errors\n    throw {\n      success: false,\n      message: error.message || 'Network error occurred'\n    } as ApiError;\n  }\n};\n\n/**\n * Admin logout\n * @returns Promise with logout response\n */\nexport const logoutUser = async (): Promise<{ success: boolean; message: string }> => {\n  try {\n    const response = await instance.post('/api/auth/logout', {}, {\n      withCredentials: true, // Include cookies\n    });\n    return response.data;\n  } catch (error: any) {\n    if (error.response?.data) {\n      throw error.response.data as ApiError;\n    }\n    \n    throw {\n      success: false,\n      message: error.message || 'Network error occurred'\n    } as ApiError;\n  }\n};\n\n/**\n * Get current admin user\n * @returns Promise with user data\n */\nexport const getCurrentUser = async (): Promise<{\n  success: boolean;\n  message: string;\n  data: {\n    id: string;\n    email: string;\n  };\n}> => {\n  try {\n    const response = await instance.get('/api/auth/me', {\n      withCredentials: true, // Include cookies\n    });\n    return response.data;\n  } catch (error: any) {\n    if (error.response?.data) {\n      throw error.response.data as ApiError;\n    }\n    \n    throw {\n      success: false,\n      message: error.message || 'Network error occurred'\n    } as ApiError;\n  }\n};"],"names":[],"mappings":";;;;;;;;AAAA;;AA+BO,MAAM,YAAY,OAAO;IAC9B,IAAI;QACF,gDAAgD;QAChD,MAAM,WAAW,MAAM,+IAAQ,CAAC,IAAI,CAAgB,mBAAmB,aAAa;YAClF,iBAAiB;QACnB;QACA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;YAEf;QADJ,qBAAqB;QACrB,KAAI,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,IAAI,EAAE;YACxB,MAAM,MAAM,QAAQ,CAAC,IAAI;QAC3B;QAEA,iCAAiC;QACjC,MAAM;YACJ,SAAS;YACT,SAAS,MAAM,OAAO,IAAI;QAC5B;IACF;AACF;AAMO,MAAM,aAAa;IACxB,IAAI;QACF,MAAM,WAAW,MAAM,+IAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG;YAC3D,iBAAiB;QACnB;QACA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;YACf;QAAJ,KAAI,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,IAAI,EAAE;YACxB,MAAM,MAAM,QAAQ,CAAC,IAAI;QAC3B;QAEA,MAAM;YACJ,SAAS;YACT,SAAS,MAAM,OAAO,IAAI;QAC5B;IACF;AACF;AAMO,MAAM,iBAAiB;IAQ5B,IAAI;QACF,MAAM,WAAW,MAAM,+IAAQ,CAAC,GAAG,CAAC,gBAAgB;YAClD,iBAAiB;QACnB;QACA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;YACf;QAAJ,KAAI,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,IAAI,EAAE;YACxB,MAAM,MAAM,QAAQ,CAAC,IAAI;QAC3B;QAEA,MAAM;YACJ,SAAS;YACT,SAAS,MAAM,OAAO,IAAI;QAC5B;IACF;AACF","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///var/www/PersonalProjects/web_blog/kunle-personal-site/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, ReactNode } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { loginUser, logoutUser, getCurrentUser, type LoginRequest, type ApiError } from \"@/apis/Auth/api\";\n\ninterface User {\n  id: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string;\n  login: (credentials: LoginRequest) => Promise<boolean>;\n  logout: () => Promise<void>;\n  checkAuth: () => Promise<boolean>; // Add checkAuth function\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const router = useRouter();\n\n  const login = async (credentials: LoginRequest): Promise<boolean> => {\n    setIsLoading(true);\n    setError(\"\");\n    \n    try {\n      const response = await loginUser(credentials);\n      \n      if (response.success) {\n        setUser(response.data.user);\n        return true;\n      } else {\n        setError(response.message || \"Login failed. Please try again.\");\n        return false;\n      }\n    } catch (error: unknown) {\n      const apiError = error as ApiError & { response?: { status?: number } };\n      \n      let errorMessage = \"An unexpected error occurred. Please try again.\";\n      \n      if (apiError.message) {\n        if (apiError.message.includes(\"Invalid\") || apiError.message.includes(\"credentials\")) {\n          errorMessage = \"Invalid email or password. Please check your credentials and try again.\";\n        } else if (apiError.message.includes(\"Network\")) {\n          errorMessage = \"Unable to connect to the server. Please check your internet connection.\";\n        } else {\n          errorMessage = apiError.message;\n        }\n      }\n      \n      setError(errorMessage);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    setIsLoading(true);\n    \n    try {\n      // Clear user state first\n      setUser(null);\n      \n      // Call logout API to clear server-side cookie\n      await logoutUser();\n      \n    } catch (error: unknown) {\n      console.error(\"Logout error:\", error);\n      // Even if API fails, ensure user is cleared locally\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n      // Navigate to login page\n      router.replace(\"/admin/login\");\n    }\n  };\n\n  // New function to check authentication - called manually from dashboard\n  const checkAuth = async (): Promise<boolean> => {\n    setIsLoading(true);\n    \n    try {\n      const response = await getCurrentUser();\n      \n      if (response.success && response.data) {\n        setUser(response.data);\n        return true;\n      } else {\n        setUser(null);\n        return false;\n      }\n    } catch (error: unknown) {\n      const apiError = error as ApiError & { response?: { status?: number } };\n      \n      // Only log non-401 errors\n      if (apiError.response?.status !== 401) {\n        console.error(\"Auth check error:\", {\n          message: apiError.message || \"Unknown error\",\n          status: apiError.response?.status,\n        });\n      }\n      \n      setUser(null);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearError = () => {\n    setError(\"\");\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    error,\n    login,\n    logout,\n    checkAuth, // Expose checkAuth function\n    clearError,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;;;AAJA;;;;AAsBA,MAAM,4BAAc,IAAA,0LAAa,EAA8B;AAExD,SAAS,aAAa,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,qLAAQ,EAAc;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,qLAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qLAAQ,EAAC;IACnC,MAAM,SAAS,IAAA,8JAAS;IAExB,MAAM,QAAQ,OAAO;QACnB,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,IAAA,sJAAS,EAAC;YAEjC,IAAI,SAAS,OAAO,EAAE;gBACpB,QAAQ,SAAS,IAAI,CAAC,IAAI;gBAC1B,OAAO;YACT,OAAO;gBACL,SAAS,SAAS,OAAO,IAAI;gBAC7B,OAAO;YACT;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,WAAW;YAEjB,IAAI,eAAe;YAEnB,IAAI,SAAS,OAAO,EAAE;gBACpB,IAAI,SAAS,OAAO,CAAC,QAAQ,CAAC,cAAc,SAAS,OAAO,CAAC,QAAQ,CAAC,gBAAgB;oBACpF,eAAe;gBACjB,OAAO,IAAI,SAAS,OAAO,CAAC,QAAQ,CAAC,YAAY;oBAC/C,eAAe;gBACjB,OAAO;oBACL,eAAe,SAAS,OAAO;gBACjC;YACF;YAEA,SAAS;YACT,OAAO;QACT,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,SAAS;QACb,aAAa;QAEb,IAAI;YACF,yBAAyB;YACzB,QAAQ;YAER,8CAA8C;YAC9C,MAAM,IAAA,uJAAU;QAElB,EAAE,OAAO,OAAgB;YACvB,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,oDAAoD;YACpD,QAAQ;QACV,SAAU;YACR,aAAa;YACb,yBAAyB;YACzB,OAAO,OAAO,CAAC;QACjB;IACF;IAEA,wEAAwE;IACxE,MAAM,YAAY;QAChB,aAAa;QAEb,IAAI;YACF,MAAM,WAAW,MAAM,IAAA,2JAAc;YAErC,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;gBACrC,QAAQ,SAAS,IAAI;gBACrB,OAAO;YACT,OAAO;gBACL,QAAQ;gBACR,OAAO;YACT;QACF,EAAE,OAAO,OAAgB;gBAInB;YAHJ,MAAM,WAAW;YAEjB,0BAA0B;YAC1B,IAAI,EAAA,qBAAA,SAAS,QAAQ,cAAjB,yCAAA,mBAAmB,MAAM,MAAK,KAAK;oBAG3B;gBAFV,QAAQ,KAAK,CAAC,qBAAqB;oBACjC,SAAS,SAAS,OAAO,IAAI;oBAC7B,MAAM,GAAE,sBAAA,SAAS,QAAQ,cAAjB,0CAAA,oBAAmB,MAAM;gBACnC;YACF;YAEA,QAAQ;YACR,OAAO;QACT,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,aAAa;QACjB,SAAS;IACX;IAEA,MAAM,QAAyB;QAC7B;QACA,iBAAiB,CAAC,CAAC;QACnB;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBAAO,yMAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;GA/GgB;;QAIC,8JAAS;;;KAJV;AAiHT,SAAS;;IACd,MAAM,UAAU,IAAA,uLAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}